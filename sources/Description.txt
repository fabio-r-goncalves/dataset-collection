Description:
	This scenario shows a simple case where depending on V2X messages vehicles decide what route to take to reach a certain destination point.
	The scene takes place at "Dreieck Barnim" on highway A11 north/north-east of Berlin in germany.
	On the A11 a bit south of highway exit "Bernau Süd" a weather warning will be triggered because of an iced street.

Routes:
	Vehicles start out on the A11 coming from north driving south targeting a point on "Bernauer Straße" (B2) south of the highway crossing.
	By default vehicles will drive along A11 to the highway cross, advancing to B2 from there (Route 1).
	Trailing vehicles will receive the message and are expected to change their route to exit on "Bernau Süd" driving through Schwanebeck and advance to "Bernauer Straße" from there (Route 2).

Important values:
	Start point: edge "behind" point at 52.6582621, 13.5693993 (id:267925376)
	End point:   edge "behind" point at 52.6094495, 13.5310829 (id:692755381)
	Ice Warning point: roughly at point 52.63, 13.56 (id:1313885502)
	(2) Way(s) "behind" that point (id:73017981) gets 30km/h maximum speed to force non equipped vehicles to drive slow.
	(5) Way(s) "behind" the last ways get 80km/h to more precisely show possible positive effects of route change
	
	Exact Ice Warning area:
	a: 52.6331, 13.5608
	b: 52.6196, 13.5656

Intended result:
	Equipped vehicles should react to the communicated ice warning and reroute to an alternative route.
	Using this should result in a better travel time. This should be dependent on the equip-rate.
	
Scenario generation:
	1. acquire OSM Data big enough for the scenario to be completely covered
	2. run through import filter to generate cleaned version of OSM file
	3. change max speed of the ways
	4. import the cleaned and "fixed" OSM map with scenario convert, exporting the sumo files in the same step
	5. generate routes on the exported network using SUMOs duarouter and the provided trip file
	   (edge IDs _should_ not change in the future as long as the network didn't change to much.)
	6. import route file and go on with regular scenario creation
	7. manually change net file to fix faulty traffic light detection by sumo (tlLogic '866614578' gets only green, '866614320' becomes an added red phase for 20 seconds)

About route generation:
	The provided trip file for route generation split the 2 actual routes into 3 parts each to make sure the route will be created correctly.
	If the network changes in the future the points where the split happens might change, along side the way IDs.
	In that case just choose new points where to split from the generated net-file and replace them in the trip file.
	The correct route file has to be created manually out of the generated one by merging the 3 part routes to one single big route.
	Be aware that the end-edge of the previous part is also the start edge of the next part and needs to be removed in one of the parts!